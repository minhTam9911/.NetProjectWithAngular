{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nclass AddCompanyAdminComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n  }\n  ngOnInit() {\n    this.formAdd = this.formBuilder.group({\n      companyName: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\n      argumentsddress: [\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(150)]],\n      phone: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(\"^[0-9]*$\")]],\n      companyUrl: [\"\", [Validators.required, Validators.pattern(/(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*))/)]]\n    });\n  }\n}\nAddCompanyAdminComponent.ɵfac = function AddCompanyAdminComponent_Factory(t) {\n  return new (t || AddCompanyAdminComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n};\nAddCompanyAdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddCompanyAdminComponent,\n  selectors: [[\"ng-component\"]],\n  decls: 33,\n  vars: 0,\n  consts: [[1, \"center-align\"], [1, \"container\"], [1, \"row\"], [1, \"col\", \"s12\"], [1, \"input-field\", \"col\", \"s12\"], [\"id\", \"password\", \"type\", \"password\", 1, \"validate\"], [\"for\", \"password\"], [\"id\", \"email\", \"type\", \"email\", 1, \"validate\"], [\"for\", \"email\"], [1, \"input-field\", \"inline\"], [\"for\", \"email\", \"data-error\", \"wrong\", \"data-success\", \"right\"]],\n  template: function AddCompanyAdminComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Form Labels\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"form\", 3)(6, \"div\", 2)(7, \"div\", 4);\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementStart(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(11, \"div\", 2)(12, \"div\", 4);\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵelementStart(14, \"label\", 6);\n      i0.ɵɵtext(15, \"Password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"div\", 4);\n      i0.ɵɵelement(18, \"input\", 5);\n      i0.ɵɵelementStart(19, \"label\", 6);\n      i0.ɵɵtext(20, \"Password\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 2)(22, \"div\", 4);\n      i0.ɵɵelement(23, \"input\", 7);\n      i0.ɵɵelementStart(24, \"label\", 8);\n      i0.ɵɵtext(25, \"Email\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(26, \"div\", 2)(27, \"div\", 3);\n      i0.ɵɵtext(28, \" This is an inline input field: \");\n      i0.ɵɵelementStart(29, \"div\", 9);\n      i0.ɵɵelement(30, \"input\", 7);\n      i0.ɵɵelementStart(31, \"label\", 10);\n      i0.ɵɵtext(32, \"Email\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n  },\n  encapsulation: 2\n});\nexport { AddCompanyAdminComponent };","map":{"version":3,"names":["Validators","AddCompanyAdminComponent","constructor","formBuilder","ngOnInit","formAdd","group","companyName","required","minLength","maxLength","argumentsddress","phone","pattern","companyUrl","i0","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","AddCompanyAdminComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\minht\\source\\repos\\Project_ASP.Net_And_Angular\\Project_Angular_Get_API\\src\\component\\admin\\company\\addCompany.component.ts","C:\\Users\\minht\\source\\repos\\Project_ASP.Net_And_Angular\\Project_Angular_Get_API\\src\\component\\admin\\company\\addCompany.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CompanyDetail } from \"src/model/companyDetail.model\";\r\n\r\n@Component({\r\n    templateUrl: './addCompany.component.html'\r\n})\r\n\r\n\r\nexport class    AddCompanyAdminComponent implements OnInit {\r\n    company: CompanyDetail;\r\n    formAdd: FormGroup;\r\n    constructor(private formBuilder: FormBuilder,\r\n        \r\n        ){}\r\n\r\n    ngOnInit(): void {\r\n     this.formAdd =   this.formBuilder.group({\r\n            companyName:[\"\",[Validators.required, Validators.minLength(5),Validators.maxLength(50)]],\r\n            argumentsddress:[\"\",[Validators.required, Validators.minLength(5),Validators.maxLength(150)]],\r\n            phone:[\"\",[Validators.required, Validators.minLength(8),Validators.maxLength(20),Validators.pattern(\"^[0-9]*$\")]],\r\n            companyUrl:[\"\",[Validators.required, Validators.pattern(/(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*))/)]]\r\n       })\r\n    }\r\n\r\n}","<div class=\"center-align\">\r\n    <h1>Form Labels</h1>\r\n  </div>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <form class=\"col s12\">\r\n        <div class=\"row\">\r\n            <div class=\"input-field col s12\">\r\n              <input id=\"password\" type=\"password\" class=\"validate\">\r\n              <label for=\"password\">Password</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"input-field col s12\">\r\n              <input id=\"password\" type=\"password\" class=\"validate\">\r\n              <label for=\"password\">Password</label>\r\n            </div>\r\n          </div>\r\n        <div class=\"row\">\r\n          <div class=\"input-field col s12\">\r\n            <input id=\"password\" type=\"password\" class=\"validate\">\r\n            <label for=\"password\">Password</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"input-field col s12\">\r\n            <input id=\"email\" type=\"email\" class=\"validate\">\r\n            <label for=\"email\">Email</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col s12\">\r\n            This is an inline input field:\r\n            <div class=\"input-field inline\">\r\n              <input id=\"email\" type=\"email\" class=\"validate\">\r\n              <label for=\"email\" data-error=\"wrong\" data-success=\"right\">Email</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  "],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;AAGnE,MAKgBC,wBAAwB;EAGpCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAEzB;EAENC,QAAQA,CAAA;IACP,IAAI,CAACC,OAAO,GAAK,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACjCC,WAAW,EAAC,CAAC,EAAE,EAAC,CAACP,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,EAACT,UAAU,CAACU,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;MACxFC,eAAe,EAAC,CAAC,EAAE,EAAC,CAACX,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,EAACT,UAAU,CAACU,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7FE,KAAK,EAAC,CAAC,EAAE,EAAC,CAACZ,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,EAACT,UAAU,CAACU,SAAS,CAAC,EAAE,CAAC,EAACV,UAAU,CAACa,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MACjHC,UAAU,EAAC,CAAC,EAAE,EAAC,CAACd,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACa,OAAO,CAAC,+FAA+F,CAAC,CAAC;KAC7J,CAAC;EACL;;AAdYZ,wBAAwB,C;mBAAxBA,wBAAwB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;AAAA;AAAxBjB,wBAAwB,C;QAAxBA,wBAAwB;EAAAkB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCTxCV,EAAA,CAAAY,cAAA,aAA0B;MAClBZ,EAAA,CAAAa,MAAA,kBAAW;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAEtBd,EAAA,CAAAY,cAAA,aAAuB;MAKXZ,EAAA,CAAAe,SAAA,eAAsD;MACtDf,EAAA,CAAAY,cAAA,eAAsB;MAAAZ,EAAA,CAAAa,MAAA,gBAAQ;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAG1Cd,EAAA,CAAAY,cAAA,cAAiB;MAEbZ,EAAA,CAAAe,SAAA,gBAAsD;MACtDf,EAAA,CAAAY,cAAA,gBAAsB;MAAAZ,EAAA,CAAAa,MAAA,gBAAQ;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAG5Cd,EAAA,CAAAY,cAAA,cAAiB;MAEbZ,EAAA,CAAAe,SAAA,gBAAsD;MACtDf,EAAA,CAAAY,cAAA,gBAAsB;MAAAZ,EAAA,CAAAa,MAAA,gBAAQ;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAG1Cd,EAAA,CAAAY,cAAA,cAAiB;MAEbZ,EAAA,CAAAe,SAAA,gBAAgD;MAChDf,EAAA,CAAAY,cAAA,gBAAmB;MAAAZ,EAAA,CAAAa,MAAA,aAAK;MAAAb,EAAA,CAAAc,YAAA,EAAQ;MAGpCd,EAAA,CAAAY,cAAA,cAAiB;MAEbZ,EAAA,CAAAa,MAAA,wCACA;MAAAb,EAAA,CAAAY,cAAA,cAAgC;MAC9BZ,EAAA,CAAAe,SAAA,gBAAgD;MAChDf,EAAA,CAAAY,cAAA,iBAA2D;MAAAZ,EAAA,CAAAa,MAAA,aAAK;MAAAb,EAAA,CAAAc,YAAA,EAAQ;;;;;SD1BtE5B,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}