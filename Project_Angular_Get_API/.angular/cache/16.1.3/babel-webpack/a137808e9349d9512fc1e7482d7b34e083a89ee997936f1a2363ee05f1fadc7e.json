{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/minht/source/repos/Project_ASP.Net_And_Angular/Project_Angular_Get_API/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet PolicyAdminComponent = class PolicyAdminComponent {\n  constructor(formBuilder, messageService, policyService, router) {\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.policyService = policyService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.companyService.findAll().then(res => {\n      this.companies = res;\n      console.log(this.companies);\n    }, err => {\n      console.log(err);\n    });\n  }\n  delete(id) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.companyService.delete(id).then(result => {\n        _this.result = result;\n      }, err => {\n        console.log(err);\n      });\n      console.log(_this.result);\n      if (_this.result) {\n        yield _this.messageService.add({\n          severity: \"success\",\n          summary: \"Delete Company Detail\",\n          detail: \"Delete Company Detail Successful\"\n        });\n      } else {\n        yield _this.messageService.add({\n          severity: \"error\",\n          summary: \"Delete Company Detail\",\n          detail: \"Delete Company Detail Fail\"\n        });\n      }\n      yield _this.companyService.findAll().then(res => {\n        _this.companies = res;\n        console.log(_this.companies);\n      }, err => {\n        console.log(err);\n      });\n    })();\n  }\n  update(id) {\n    this.router.navigate([\"/admin/update-company\", {\n      companyId: id\n    }]);\n  }\n};\nPolicyAdminComponent = __decorate([Component({\n  templateUrl: './policy.component.html'\n})], PolicyAdminComponent);\nexport { PolicyAdminComponent };","map":{"version":3,"names":["Component","PolicyAdminComponent","constructor","formBuilder","messageService","policyService","router","ngOnInit","companyService","findAll","then","res","companies","console","log","err","delete","id","_this","_asyncToGenerator","result","add","severity","summary","detail","update","navigate","companyId","__decorate","templateUrl"],"sources":["C:\\Users\\minht\\source\\repos\\Project_ASP.Net_And_Angular\\Project_Angular_Get_API\\src\\component\\admin\\polices\\policy.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CompanyDetail } from \"src/model/companyDetail.model\";\r\nimport {  MessageService } from 'primeng/api';\r\nimport { CompanyDetailService } from \"src/service/admin/companyDetail.sevice\";\r\nimport { Result } from \"src/service/result.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Policy } from \"src/model/policy.model\";\r\n\r\n@Component({\r\n    templateUrl: './policy.component.html'\r\n})\r\n\r\n\r\nexport class    PolicyAdminComponent implements OnInit {\r\n    result: Result\r\n    policies: Policy[];\r\n    formAdd: FormGroup;\r\n    constructor(private formBuilder: FormBuilder,\r\n        private messageService: MessageService,\r\n        private policyService: PolicyService,\r\n        private router: Router\r\n        ){}\r\n\r\n    ngOnInit(): void {\r\n      this.companyService.findAll().then(\r\n        res =>{\r\n            this.companies = res as CompanyDetail[];\r\n            console.log(this.companies)\r\n        },\r\n        err =>{console.log(err)}\r\n      )\r\n    }\r\n    async delete(id: number){\r\n      await this.companyService.delete(id).then(\r\n        result =>{\r\n            this.result = result as Result\r\n        },  \r\n        err =>{console.log(err)}\r\n      )\r\n      console.log(this.result)\r\n      if(this.result){\r\n        await this.messageService.add({severity:\"success\",summary:\"Delete Company Detail\",detail:\"Delete Company Detail Successful\"});\r\n      }\r\n      else{\r\n        await this.messageService.add({severity:\"error\",summary:\"Delete Company Detail\",detail:\"Delete Company Detail Fail\"});\r\n    \r\n      }\r\n      await this.companyService.findAll().then(\r\n        res =>{\r\n           this.companies = res as CompanyDetail[];\r\n            console.log(this.companies);\r\n             \r\n        },\r\n        err =>{console.log(err)}\r\n      )\r\n    }\r\n     update(id:number){\r\n      this.router.navigate([\"/admin/update-company\",{companyId:id}])\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,SAAS,QAAgB,eAAe;AAcjD,IAAgBC,oBAAoB,GAApC,MAAgBA,oBAAoB;EAIhCC,YAAoBC,WAAwB,EAChCC,cAA8B,EAC9BC,aAA4B,EAC5BC,MAAc;IAHN,KAAAH,WAAW,GAAXA,WAAW;IACnB,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,aAAa,GAAbA,aAAa;IACb,KAAAC,MAAM,GAANA,MAAM;EACZ;EAENC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,CAACC,OAAO,EAAE,CAACC,IAAI,CAChCC,GAAG,IAAG;MACF,IAAI,CAACC,SAAS,GAAGD,GAAsB;MACvCE,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,SAAS,CAAC;IAC/B,CAAC,EACDG,GAAG,IAAG;MAACF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAAA,CAAC,CACzB;EACH;EACMC,MAAMA,CAACC,EAAU;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACrB,MAAMD,KAAI,CAACV,cAAc,CAACQ,MAAM,CAACC,EAAE,CAAC,CAACP,IAAI,CACvCU,MAAM,IAAG;QACLF,KAAI,CAACE,MAAM,GAAGA,MAAgB;MAClC,CAAC,EACDL,GAAG,IAAG;QAACF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAAA,CAAC,CACzB;MACDF,OAAO,CAACC,GAAG,CAACI,KAAI,CAACE,MAAM,CAAC;MACxB,IAAGF,KAAI,CAACE,MAAM,EAAC;QACb,MAAMF,KAAI,CAACd,cAAc,CAACiB,GAAG,CAAC;UAACC,QAAQ,EAAC,SAAS;UAACC,OAAO,EAAC,uBAAuB;UAACC,MAAM,EAAC;QAAkC,CAAC,CAAC;OAC9H,MACG;QACF,MAAMN,KAAI,CAACd,cAAc,CAACiB,GAAG,CAAC;UAACC,QAAQ,EAAC,OAAO;UAACC,OAAO,EAAC,uBAAuB;UAACC,MAAM,EAAC;QAA4B,CAAC,CAAC;;MAGvH,MAAMN,KAAI,CAACV,cAAc,CAACC,OAAO,EAAE,CAACC,IAAI,CACtCC,GAAG,IAAG;QACHO,KAAI,CAACN,SAAS,GAAGD,GAAsB;QACtCE,OAAO,CAACC,GAAG,CAACI,KAAI,CAACN,SAAS,CAAC;MAE/B,CAAC,EACDG,GAAG,IAAG;QAACF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAAA,CAAC,CACzB;IAAA;EACH;EACCU,MAAMA,CAACR,EAAS;IACf,IAAI,CAACX,MAAM,CAACoB,QAAQ,CAAC,CAAC,uBAAuB,EAAC;MAACC,SAAS,EAACV;IAAE,CAAC,CAAC,CAAC;EAChE;CACH;AA9CehB,oBAAoB,GAAA2B,UAAA,EALnC5B,SAAS,CAAC;EACP6B,WAAW,EAAE;CAChB,CAAC,C,EAGc5B,oBAAoB,CA8CnC;SA9CeA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}