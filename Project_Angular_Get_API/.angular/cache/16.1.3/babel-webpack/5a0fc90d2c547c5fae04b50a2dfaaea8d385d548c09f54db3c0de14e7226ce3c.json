{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/minht/source/repos/Project_ASP.Net_And_Angular/Project_Angular_Get_API/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nlet EditCompanyAdminComponent = class EditCompanyAdminComponent {\n  constructor(formBuilder, messageService, companyService, routerAcive) {\n    this.formBuilder = formBuilder;\n    this.messageService = messageService;\n    this.companyService = companyService;\n    this.routerAcive = routerAcive;\n  }\n  ngOnInit() {\n    this.routerAcive.paramMap.subscribe(value => {\n      var id = parseInt(value.get('id'));\n      this.companyService.findById(id).then(res => {\n        this.company = res;\n        this.formAdd = this.formBuilder.group({\n          companyId: this.company.companyId,\n          companyName: [this.company.companyName, [Validators.required, Validators.minLength(5), Validators.maxLength(50)]],\n          address: [this.company.address, [Validators.required, Validators.minLength(5), Validators.maxLength(150)]],\n          phone: [this.company.phone, [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(\"^[0-9]*$\")]],\n          companyUrl: [this.company.companyUrl, [Validators.required, Validators.pattern(/(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*))/)]]\n        });\n      }, err => {\n        console.log(err);\n      });\n    });\n  }\n  save() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      var companySave = _this.formAdd.value;\n      yield _this.companyService.update(companySave).then(res => {\n        console.log(res);\n        _this.result = res;\n        console.log(_this.result);\n      }, err => console.log(err));\n    })();\n  }\n  show() {\n    if (this.result) {\n      this.messageService.add({\n        severity: \"success\",\n        summary: \"Add Success\",\n        detail: \"Company add successful\"\n      });\n    } else {\n      this.messageService.add({\n        severity: \"error\",\n        summary: \"Add Success\",\n        detail: \"Company add fail\"\n      });\n    }\n  }\n};\nEditCompanyAdminComponent = __decorate([Component({\n  templateUrl: './updateCompany.component.html'\n})], EditCompanyAdminComponent);\nexport { EditCompanyAdminComponent };","map":{"version":3,"names":["Component","Validators","EditCompanyAdminComponent","constructor","formBuilder","messageService","companyService","routerAcive","ngOnInit","paramMap","subscribe","value","id","parseInt","get","findById","then","res","company","formAdd","group","companyId","companyName","required","minLength","maxLength","address","phone","pattern","companyUrl","err","console","log","save","_this","_asyncToGenerator","companySave","update","result","show","add","severity","summary","detail","__decorate","templateUrl"],"sources":["C:\\Users\\minht\\source\\repos\\Project_ASP.Net_And_Angular\\Project_Angular_Get_API\\src\\component\\admin\\company\\updateCompany.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { CompanyDetail } from \"src/model/companyDetail.model\";\r\nimport {  MessageService } from 'primeng/api';\r\nimport { CompanyDetailService } from \"src/service/admin/companyDetail.sevice\";\r\nimport { Result } from \"src/service/result.service\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n    templateUrl: './updateCompany.component.html'\r\n})\r\n\r\n\r\nexport class    EditCompanyAdminComponent implements OnInit {\r\n    result: Result\r\n    company: CompanyDetail;\r\n    formAdd: FormGroup;\r\n    constructor(private formBuilder: FormBuilder,\r\n        private messageService: MessageService,\r\n        private companyService: CompanyDetailService,\r\n        private routerAcive : ActivatedRoute\r\n        ){}\r\n\r\n    ngOnInit(): void {\r\n        this.routerAcive.paramMap.subscribe( value=> {\r\n             var id = parseInt(value.get('id'));\r\n             this.companyService.findById(id).then(\r\n                res =>{\r\n                    this.company = res as CompanyDetail\r\n                    this.formAdd =   this.formBuilder.group({\r\n                        companyId: this.company.companyId,\r\n                        companyName:[this.company.companyName,[Validators.required, Validators.minLength(5),Validators.maxLength(50)]],\r\n                        address:[this.company.address,[Validators.required, Validators.minLength(5),Validators.maxLength(150)]],\r\n                        phone:[this.company.phone,[Validators.required, Validators.minLength(8),Validators.maxLength(20),Validators.pattern(\"^[0-9]*$\")]],\r\n                        companyUrl:[this.company.companyUrl,[Validators.required, Validators.pattern(/(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,4}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*))/)]]\r\n                   })\r\n\r\n                },err =>{console.log(err)}\r\n             )\r\n        }\r\n        )\r\n     \r\n    }\r\n    async save(){\r\n        var companySave: CompanyDetail = this.formAdd.value as CompanyDetail\r\n       await this.companyService.update(companySave).then(\r\n            res => {\r\n                console.log(res)\r\n                this.result = res as Result;\r\n                console.log(this.result)\r\n                \r\n            },\r\n\r\n            err => console.log(err)\r\n        )\r\n    }\r\n    show(){\r\n        if(this.result){\r\n        this.messageService.add({severity:\"success\",summary:\"Add Success\", detail:\"Company add successful\"})\r\n        }\r\n        else{\r\n            this.messageService.add({severity:\"error\",summary:\"Add Success\", detail:\"Company add fail\"})\r\n        }\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}